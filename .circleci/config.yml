# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs
          
commands:
   destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-befc9

jobs:
#   create_cloudfront:
#     docker:
#       - image: amazon/aws-cli
#     steps:
#       - checkout
#       - run:
#           name: Execute bucket.yml - Create Cloudformation Stack
#           command: |
#             aws cloudformation deploy \
#             --template-file cloudfront.yml \
#             --stack-name production-distro \
#             --parameter-overrides PipelineID=mmy-bucket-10
#    create_and_deploy_front_end:
#     docker:
#       - image: amazon/aws-cli
#     steps:
#       - checkout
#       - run:
#           name: Execute bucket.yml - Create Cloudformation Stack
#           command: |
#             aws cloudformation deploy \
#             --template-file bucket.yml \
#             --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
#             --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}" 
  # Exercise - Rollback
#   create_infrastructure: 
#     docker:
#       - image: amazon/aws-cli
#     steps:
#       - checkout
#       - run:
#           name: Create Cloudformation Stack
#           command: |
#             aws cloudformation deploy \
#               --template-file template.yml \
#               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
#               --region us-east-1
              
#    # Exercise: Config and Deployment
#   configure_infrastructure: 
#     docker:
#       - image: python:3.7-alpine3.11
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints: ["c6:49:f5:dd:8c:05:28:76:55:41:7a:f1:18:39:25:85"] # You can get this ID in the section where you registered the SSH Key
#       - run:
#           name: Install dependencies
#           command: |
#             # install the dependencies needed for your playbook
#             apk add --update ansible 
#       - run:
#           name: Configure server
#           command: |

#             ansible-playbook -i inventory.txt main4.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl aws-cli
      - run:
          name: smoke test
          command: |
            URL="http://44.205.2.108:3000"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment           



workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      -   smoke_test

#           requires:
#             -  configure_infrastructure

